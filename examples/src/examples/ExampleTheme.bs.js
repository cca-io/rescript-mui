// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_array from "rescript/lib/es6/caml_array.js";
import * as Styles from "@mui/material/styles";

var themeOptions_breakpoints = {
  keys: [
    "xs",
    "sm",
    "md",
    "lg",
    "xl"
  ],
  values: {
    lg: 1200,
    md: 960,
    sm: 600,
    xl: 1920,
    xs: 0
  },
  unit: "px"
};

var themeOptions_direction = "ltr";

var themeOptions_mixins = {
  gutters: "16px",
  toolbar: {
    minHeight: "56px"
  }
};

var themeOptions_components = {
  MuiButton: {
    defaultProps: {
      variant: "contained"
    },
    styleOverrides: {
      root: {
        padding: "16px",
        borderRadius: "0"
      }
    }
  }
};

var themeOptions_palette = {
  action: {
    activatedOpacity: 0.12,
    active: "#000",
    disabled: "#ccc",
    disabledBackground: "#f5f5f5",
    disabledOpacity: 0.38,
    focus: "#ddd",
    focusOpacity: 0.12,
    hover: "#eee",
    hoverOpacity: 0.08,
    selected: "#bbb",
    selectedOpacity: 0.16
  },
  background: {
    default: "#fafafa",
    paper: "#fff"
  },
  common: {
    black: "#000",
    white: "#fff"
  },
  contrastThreshold: 3,
  divider: "rgba(0, 0, 0, 0.12)",
  error: {
    "50": "#ffebee",
    "100": "#ffcdd2",
    "200": "#ef9a9a",
    "300": "#e57373",
    "400": "#ef5350",
    "500": "#f44336",
    "600": "#e53935",
    "700": "#d32f2f",
    "800": "#c62828",
    "900": "#b71c1c",
    A100: "#ff8a80",
    A200: "#ff5252",
    A400: "#ff1744",
    A700: "#d50000",
    contrastText: "#fff",
    dark: "#d32f2f",
    light: "#e57373",
    main: "#f44336"
  },
  grey: {
    "50": "#fafafa",
    "100": "#f5f5f5",
    "200": "#eeeeee",
    "300": "#e0e0e0",
    "400": "#bdbdbd",
    "500": "#9e9e9e",
    "600": "#757575",
    "700": "#616161",
    "800": "#424242",
    "900": "#212121",
    A100: "#d5d5d5",
    A200: "#aaaaaa",
    A400: "#303030",
    A700: "#616161"
  },
  info: {
    contrastText: "#fff",
    dark: "#1976d2",
    light: "#64b5f6",
    main: "#2196f3"
  },
  mode: "light",
  primary: {
    contrastText: "#fff",
    dark: "#004ba0",
    light: "#63a4ff",
    main: "#1976d2"
  },
  secondary: {
    contrastText: "#fff",
    dark: "#9a0036",
    light: "#ff5c8d",
    main: "#dc004e"
  },
  success: {
    contrastText: "#fff",
    dark: "#388e3c",
    light: "#81c784",
    main: "#4caf50"
  },
  text: {
    disabled: "rgba(0, 0, 0, 0.38)",
    hint: "rgba(0, 0, 0, 0.38)",
    primary: "rgba(0, 0, 0, 0.87)",
    secondary: "rgba(0, 0, 0, 0.54)"
  },
  tonalOffset: {
    dark: 0.2,
    light: 0.2
  },
  warning: {
    contrastText: "#fff",
    dark: "#f57c00",
    light: "#ffb74d",
    main: "#ff9800"
  }
};

var themeOptions_shadows = [
  "none",
  "0px 1px 3px rgba(0,0,0,0.2)",
  "0px 1px 5px rgba(0,0,0,0.2)"
];

var themeOptions_shape = {
  borderRadius: 4
};

var themeOptions_spacing = (function (n) {
    return (n << 3);
  });

var themeOptions_transitions = {
  easing: {
    easeIn: "ease-in",
    easeInOut: "ease-in-out",
    easeOut: "ease-out",
    sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
  },
  duration: {
    complex: 0.2,
    enteringScreen: 0.3,
    leavingScreen: 0.2,
    short: 150,
    shorter: 100,
    shortest: 50,
    standard: 250
  }
};

var themeOptions_typography = {
  fontFamily: "Roboto, sans-serif",
  fontSize: 14,
  fontWeightLight: "300",
  fontWeightRegular: "400",
  fontWeightMedium: "500",
  fontWeightBold: "700",
  htmlFontSize: 16,
  h1: {
    fontSize: "2rem"
  },
  h2: {
    fontSize: "1.75rem"
  },
  h3: {
    fontSize: "1.5rem"
  },
  h4: {
    fontSize: "1.25rem"
  },
  h5: {
    fontSize: "1rem"
  },
  h6: {
    fontSize: "0.875rem"
  },
  subtitle1: {
    fontSize: "1rem"
  },
  subtitle2: {
    fontSize: "0.875rem"
  },
  body1: {
    fontSize: "1rem"
  },
  body2: {
    fontSize: "0.875rem"
  },
  button: {
    fontSize: "0.875rem",
    textTransform: "uppercase"
  },
  caption: {
    fontSize: "0.75rem"
  },
  overline: {
    fontSize: "0.75rem",
    textTransform: "uppercase"
  }
};

var themeOptions_unstable_strictMode = true;

var themeOptions_zIndex = {
  appBar: 1100,
  drawer: 1200,
  mobileStepper: 1000,
  modal: 1300,
  snackbar: 1400,
  speedDial: 1500,
  tooltip: 1600
};

var themeOptions = {
  breakpoints: themeOptions_breakpoints,
  direction: themeOptions_direction,
  mixins: themeOptions_mixins,
  components: themeOptions_components,
  palette: themeOptions_palette,
  shadows: themeOptions_shadows,
  shape: themeOptions_shape,
  spacing: themeOptions_spacing,
  transitions: themeOptions_transitions,
  typography: themeOptions_typography,
  unstable_strictMode: themeOptions_unstable_strictMode,
  zIndex: themeOptions_zIndex
};

var theme = Styles.createTheme(themeOptions);

console.log("============ Theme Basic Properties ============");

console.log("Theme direction: " + theme.direction);

console.log("Palette mode:", theme.palette.mode);

console.log("Breakpoints keys:", theme.breakpoints.keys);

console.log("Typography fontFamily:", theme.typography.fontFamily);

console.log("\n============ Theme Colors ============");

console.log("Primary main:", theme.palette.primary.main);

console.log("Primary light:", theme.palette.primary.light);

console.log("Primary dark:", theme.palette.primary.dark);

console.log("Secondary main:", theme.palette.secondary.main);

console.log("Error main:", theme.palette.error.main);

console.log("Warning main:", theme.palette.warning.main);

console.log("Info main:", theme.palette.info.main);

console.log("Success main:", theme.palette.success.main);

console.log("Background default:", theme.palette.background.default);

console.log("Background paper:", theme.palette.background.paper);

console.log("Common white:", theme.palette.common.white);

console.log("Common black:", theme.palette.common.black);

console.log("Text primary:", theme.palette.text.primary);

console.log("Text secondary:", theme.palette.text.secondary);

console.log("Text disabled:", theme.palette.text.disabled);

console.log("Divider:", theme.palette.divider);

console.log("\n============ Typography ============");

console.log("Font family:", theme.typography.fontFamily);

console.log("Font size:", theme.typography.fontSize);

console.log("Font weight light:", theme.typography.fontWeightLight);

console.log("Font weight regular:", theme.typography.fontWeightRegular);

console.log("Font weight medium:", theme.typography.fontWeightMedium);

console.log("Font weight bold:", theme.typography.fontWeightBold);

console.log("HTML font size:", theme.typography.htmlFontSize);

console.log("h1:", theme.typography.h1);

console.log("h2:", theme.typography.h2);

console.log("body1:", theme.typography.body1);

console.log("button:", theme.typography.button);

console.log("\n============ Spacing ============");

console.log("spacing(1):", theme.spacing(1));

console.log("spacing(2):", theme.spacing(2));

console.log("spacing(3):", theme.spacing(3));

console.log("spacing(4):", theme.spacing(4));

console.log("\n============ Breakpoints ============");

console.log("xs value:", theme.breakpoints.values.xs);

console.log("sm value:", theme.breakpoints.values.sm);

console.log("md value:", theme.breakpoints.values.md);

console.log("lg value:", theme.breakpoints.values.lg);

console.log("xl value:", theme.breakpoints.values.xl);

console.log("unit:", theme.breakpoints.unit);

console.log("\n============ Shape ============");

console.log("Border radius:", theme.shape.borderRadius);

console.log("\n============ Transitions ============");

console.log("Easing ease-in:", theme.transitions.easing.easeIn);

console.log("Easing ease-out:", theme.transitions.easing.easeOut);

console.log("Duration shortest:", theme.transitions.duration.shortest);

console.log("Duration standard:", theme.transitions.duration.standard);

console.log("\n============ Z-Index ============");

console.log("App bar:", theme.zIndex.appBar);

console.log("Drawer:", theme.zIndex.drawer);

console.log("Modal:", theme.zIndex.modal);

console.log("Snackbar:", theme.zIndex.snackbar);

console.log("Tooltip:", theme.zIndex.tooltip);

console.log("\n============ Shadows ============");

console.log("Shadow 0:", Caml_array.get(theme.shadows, 0));

console.log("Shadow 1:", Caml_array.get(theme.shadows, 1));

console.log("Shadow 2:", Caml_array.get(theme.shadows, 2));

export {
  themeOptions ,
  theme ,
}
/* theme Not a pure module */
