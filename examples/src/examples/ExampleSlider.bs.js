// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Caml_format from "rescript/lib/es6/caml_format.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as JsxRuntime from "react/jsx-runtime";
import Grid from "@mui/material/Grid";
import Input from "@mui/material/Input";
import Slider from "@mui/material/Slider";
import Typography from "@mui/material/Typography";
import VolumeUp from "@mui/icons-material/VolumeUp";

var VolumeUpIcon = {};

function ExampleSlider(props) {
  var match = React.useReducer((function (param, v) {
          return v;
        }), 0);
  var setValue = match[1];
  var value = match[0];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(Typography, {
                      gutterBottom: true,
                      children: "Volume"
                    }),
                JsxRuntime.jsxs(Grid, {
                      alignItems: "center",
                      children: [
                        JsxRuntime.jsx(Grid, {
                              children: Caml_option.some(JsxRuntime.jsx(VolumeUp, {}))
                            }),
                        JsxRuntime.jsx(Grid, {
                              children: Caml_option.some(JsxRuntime.jsx(Slider, {
                                        "aria-labelledby": "input-slider",
                                        onChange: (function (param, v, param$1) {
                                            setValue(v);
                                          }),
                                        value: value
                                      })),
                              size: {
                                gridSize: "grow"
                              }
                            }),
                        JsxRuntime.jsx(Grid, {
                              children: Caml_option.some(JsxRuntime.jsx(Input, {
                                        inputProps: {
                                          "aria-labelledby": "input-slider",
                                          type: "number",
                                          max: 100,
                                          min: 0,
                                          step: 10
                                        },
                                        margin: "dense",
                                        onBlur: (function (param) {
                                            if (value < 0) {
                                              return setValue(0);
                                            } else if (value > 100) {
                                              return setValue(100);
                                            } else {
                                              return ;
                                            }
                                          }),
                                        value: value,
                                        onChange: (function (e) {
                                            setValue(Caml_format.float_of_string(e.target.value));
                                          })
                                      }))
                            })
                      ],
                      container: true,
                      spacing: 2
                    })
              ]
            });
}

var make = ExampleSlider;

export {
  VolumeUpIcon ,
  make ,
}
/* react Not a pure module */
